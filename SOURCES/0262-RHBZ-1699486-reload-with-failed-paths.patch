---
 libmultipath/configure.c |   12 ++++++------
 libmultipath/discovery.c |    8 ++++++--
 multipathd/main.c        |    1 +
 3 files changed, 13 insertions(+), 8 deletions(-)

Index: multipath-tools-130222/libmultipath/discovery.c
===================================================================
--- multipath-tools-130222.orig/libmultipath/discovery.c
+++ multipath-tools-130222/libmultipath/discovery.c
@@ -1264,8 +1264,12 @@ get_prio (struct path * pp)
 		}
 		return 1;
 	}
-	condlog(3, "%s: %s prio = %u",
-		pp->dev, prio_name(p), pp->priority);
+	if (old_prio != PRIO_UNDEF && old_prio != pp->priority)
+		condlog(2, "%s: prio changed from %d to %d", pp->dev,
+			old_prio, pp->priority);
+	else
+		condlog(3, "%s: %s prio = %u",
+			pp->dev, prio_name(p), pp->priority);
 	return 0;
 }
 
Index: multipath-tools-130222/multipathd/main.c
===================================================================
--- multipath-tools-130222.orig/multipathd/main.c
+++ multipath-tools-130222/multipathd/main.c
@@ -1370,6 +1370,7 @@ int update_prio(struct path *pp, int ref
 
 int update_path_groups(struct multipath *mpp, struct vectors *vecs, int refresh)
 {
+	condlog(2, "%s: updating path groups %d", mpp->alias, refresh);
 	if (reload_map(vecs, mpp, refresh))
 		return 1;
 
Index: multipath-tools-130222/libmultipath/configure.c
===================================================================
--- multipath-tools-130222.orig/libmultipath/configure.c
+++ multipath-tools-130222/libmultipath/configure.c
@@ -453,12 +453,6 @@ select_action (struct multipath * mpp, v
 		return;
 	}
 
-	if (pathcount(mpp, PATH_UP) == 0) {
-		mpp->action = ACT_NOTHING;
-		condlog(3, "%s: set ACT_NOTHING (no usable path)",
-			mpp->alias);
-		return;
-	}
 	if (force_reload) {
 		mpp->force_udev_reload = 1;
 		mpp->action = ACT_RELOAD;
@@ -466,6 +460,12 @@ select_action (struct multipath * mpp, v
 			mpp->alias);
 		return;
 	}
+	if (pathcount(mpp, PATH_UP) == 0) {
+		mpp->action = ACT_NOTHING;
+		condlog(3, "%s: set ACT_NOTHING (no usable path)",
+			mpp->alias);
+		return;
+	}
 	if (cmpp->size != mpp->size) {
 		mpp->force_udev_reload = 1;
 		mpp->action = ACT_RESIZE;
